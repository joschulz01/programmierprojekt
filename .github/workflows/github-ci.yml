name: CI/CD for Angular Project

# Ausf√ºhrung bei Pull-Request in dem Main-Branch
on:
  pull_request:
    branches-ignore:
      - 'snyk-upgrade-*'

defaults:
  run:
    shell: bash
    working-directory: ./programmierprojekt

jobs:
  lint:
    name: Lint der Angular App
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Install Dependencies
      - name: Install Dependencies
        run: npm install -g @angular/cli@18

      # Stage: Linting
      - name: Install ESLint
        run: ng add @angular-eslint/schematics --skip-confirmation

      - name: Run Linter
        run: ng lint

  sca:
    name: SCA with Snyk
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      # Set up Node.js environment
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Stage: Install Snyk
      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Test configuration
        run: snyk test

      - name: Code analysis
        run: snyk code test

      - name: Transfer results
        run: snyk monitor

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Install Dependencies
      - name: Install Dependencies
        run: |
          npm install
          npm install -g @angular/cli@18
          npm install jest jest-preset-angular @types/jest ts-jest

      # Stage: Run unit test
      - name: Run Linter
        run: npm test

  robot-test:
    name: Integrationtest / E2E-Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        python-version: [3.8]
    
    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Set up Node.js environment
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Stage: Install Robot Framework with needed libary
      - name: Install Robot Framework
        run: |
          pip install robotframework
          pip install robotframework-browser

      # Install Dependencies
      - name: Install Dependencies
        run: |
          npm install
          npm install -g @angular/cli@18
          sudo apt-get install python3-tk

      # Stage: Serve localhost
      - name: Serve website
        run: ng serve &

      # Stage: Init Robot Framework

      - name: Init Robot Framework
        run: |
          echo "waiting 30 seconds..."
          sleep 30
          rfbrowser init

      # Stage: Run Robot Framework tests
      - name: Run Robot Framework tests
        run: robot Test.robot

  build-multiarch-release:
    name: Erstellung des Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Stage: Create, build and push Docker image
      - name: Create, build and push Docker image
        run: |
          until docker info; do
          sleep 5 && echo "Waiting for docker daemon...";
          done;
          docker build .